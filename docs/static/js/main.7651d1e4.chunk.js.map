{"version":3,"sources":["TodoTextInput.js","Header.js","TodoItem.js","TodoList.js","Footer.js","TodoFilters.js","MainSection.js","App.js","index.js"],"names":["TodoTextInput","value","onSave","newTodo","placeholder","editing","React","useState","text","setText","className","type","autoFocus","onBlur","e","newValue","target","trim","onChange","onKeyDown","which","Header","addTodo","length","TodoItem","todo","toggleTodo","editTodo","deleteTodo","setEditing","completed","checked","id","onClick","handleSave","TodoList","todos","map","key","FILTER_TITLES","Footer","visibilityFilter","activeCount","completedCount","setFilter","clearCompleted","itemWord","Object","keys","filter","MainSection","visibleTodos","toggleAllTodo","todosCount","t","Error","defaultTodos","Array","params","window","location","href","split","str","is","Number","NaN","getTodosNumber","fill","_","i","App","setTodos","reduce","maxId","Math","max","areAllMarked","every","useTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7651d1e4.chunk.js","sourcesContent":["import React from 'react';\n\nlet ENTER_KEY = 13;\n\nexport default function TodoTextInput({ value, onSave, newTodo, editing, placeholder }) {\n  let [text, setText] = React.useState(value || \"\");\n\n  let handleSubmit = (e) => {\n    let newValue = e.target.value.trim();\n\n    if (e.which === ENTER_KEY) {\n      onSave(newValue);\n\n      if (newTodo) {\n        setText(\"\");\n      } else {\n        setText(newValue);\n      }\n    }\n  };\n  \n  let handleChange = (e) => {\n    setText(e.target.value);\n  }\n\n  let handleBlur = (e) => {\n    let newValue = e.target.value.trim();\n    onSave(newValue);\n\n    if (newTodo) {\n      setText(\"\");\n    } else {\n      setText(newValue);\n    }\n  };\n\n  return (\n    <input\n      className={`${newTodo ? \"new-todo\" : \"edit\"}`}\n      type=\"text\"\n      placeholder={placeholder}\n      autoFocus={true}\n      value={text}\n      onBlur={handleBlur}\n      onChange={handleChange}\n      onKeyDown={handleSubmit}\n    />\n  );\n}\n","import React from 'react';\nimport TodoTextInput from './TodoTextInput';\n\nexport default function Header({ addTodo }) {\n  let onSave = (text) => {\n    if (text.length !== 0) {\n      addTodo(text)\n    }\n  };\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n      <TodoTextInput\n        newTodo={true}\n        onSave={onSave}\n        placeholder={\"What needs to be done?\"}\n      />\n    </header>\n  );\n}\n","import React from 'react';\nimport TodoTextInput from \"./TodoTextInput\";\n\nexport default function TodoItem({ todo, toggleTodo, editTodo, deleteTodo }) {\n  let [editing, setEditing] = React.useState(false);\n\n  let handleDoubleClick = () => setEditing(true);\n\n  let handleSave = (id, text) => {\n    if (text.length === 0) {\n      deleteTodo(id);\n    } else {\n      editTodo(id, text);\n    }\n    setEditing(false);\n  };\n\n\n  return (\n    <li className={`${todo.completed ? \"completed \":\"\"}${editing ? \"editing\" : \"\"}`} >\n      <div className=\"view\">\n        <input\n          className=\"toggle\"\n          type=\"checkbox\"\n          checked={todo.completed}\n          onChange={() => toggleTodo(todo.id)}\n        />\n        <label onClick={handleDoubleClick}>{todo.text}</label>\n        <button className=\"destroy\" onClick={() => deleteTodo(todo.id)} />\n      </div>\n\n      <TodoTextInput\n        value={todo.text}\n        editing={editing}\n        onSave={text => handleSave(todo.id, text)}\n        placeholder=\"\"\n      />\n    </li>\n  );\n}\n","import React from 'react';\nimport TodoItem from \"./TodoItem\";\n\nexport default function TodoList({ todos, editTodo, deleteTodo, toggleTodo }) {\n  return (\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <TodoItem\n          todo={todo}\n          key={todo.id}\n          editTodo={editTodo}\n          toggleTodo={toggleTodo}\n          deleteTodo={deleteTodo}\n        />\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from \"./TodoFilters.js\";\n\nconst FILTER_TITLES = {\n  [SHOW_ALL]: \"All\",\n  [SHOW_ACTIVE]: \"Active\",\n  [SHOW_COMPLETED]: \"Completed\"\n};\n\nexport default function Footer({\n  visibilityFilter,\n  activeCount,\n  completedCount,\n  setFilter,\n  clearCompleted\n}) {\n  const itemWord = activeCount === 1 ? \"item\" : \"items\";\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{`${activeCount}` || \"No\"}</strong> {itemWord} left\n      </span>\n      <ul className=\"filters\">\n        {Object.keys(FILTER_TITLES).map(filter => (\n          <li key={filter}>\n            <a\n              className={filter === visibilityFilter ? \"selected\" : \"\"}\n              onClick={() => setFilter(filter)}\n            >\n              {FILTER_TITLES[filter]}\n            </a>\n          </li>\n        ))}\n      </ul>\n      {completedCount > 0 ? (\n        <button className=\"clear-completed\" onClick={clearCompleted}>\n          Clear completed\n        </button>\n      ) : null}\n    </footer>\n  );\n};\n","export const SHOW_ALL = \"show_all\";\nexport const SHOW_COMPLETED = \"show_completed\";\nexport const SHOW_ACTIVE = \"show_active\";\n","import React from 'react';\nimport TodoList from \"./TodoList\";\nimport Footer from \"./Footer\";\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from \"./TodoFilters.js\";\n\nexport default function MainSection({\n  todos,\n  deleteTodo,\n  editTodo,\n  toggleTodo,\n  toggleAllTodo,\n  clearCompleted\n}) {\n  let [visibilityFilter, setFilter] = React.useState(SHOW_ALL);\n\n  let todosCount = todos.length;\n  let visibleTodos;\n  let completedCount = todos.filter(({ completed }) => completed).length;\n\n  switch (visibilityFilter) {\n    case SHOW_ALL:\n      visibleTodos = todos;\n      break;\n    case SHOW_COMPLETED:\n      visibleTodos = todos.filter(t => t.completed);\n      break;\n    case SHOW_ACTIVE:\n      visibleTodos = todos.filter(t => !t.completed);\n      break;\n    default:\n      throw new Error(\"Unknown filter: \" + visibilityFilter);\n  }\n\n  return (\n    <section className=\"main\">\n      { todosCount > 0 ? (\n        <span>\n          <input\n            className=\"toggle-all\"\n            type=\"checkbox\"\n            checked={completedCount === todosCount}\n          />\n          <label onClick={toggleAllTodo} />\n        </span>\n      ) : null}\n\n      <TodoList\n        todos={visibleTodos}\n        deleteTodo={deleteTodo}\n        editTodo={editTodo}\n        toggleTodo={toggleTodo}\n      />\n\n      {todosCount > 0 ? (\n        <Footer\n          visibilityFilter={visibilityFilter}\n          setFilter={setFilter}\n          completedCount={completedCount}\n          activeCount={todosCount - completedCount}\n          clearCompleted={clearCompleted}\n        />\n      ) : null}\n    </section>\n  );\n};","import React from 'react';\nimport Header from \"./Header\";\nimport MainSection from \"./MainSection\";\n\nlet getTodosNumber = () => {\n  let params = window.location.href.split('?')[1];\n  if (params) {\n    let str = params.split(\"todos=\")[1];\n    return Object.is(Number(str), NaN) ? 0 : Number(str);\n  }\n  return 0;\n}\n\nlet defaultTodos = Array(getTodosNumber()).fill(0).map((_, i) => {\n  return { id: i, completed: false, text: `Todo #${i}` };\n});\n\nconst useTodos = (defaultTodos = []) => {\n  const [todos, setTodos] = React.useState(defaultTodos);\n\n  const addTodo = text => {\n    setTodos([\n      ...todos,\n      {\n        id: todos.reduce((maxId, todo) => Math.max(todo.id, maxId), -1) + 1,\n        completed: false,\n        text\n      }\n    ]);\n  };\n\n  const deleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const editTodo = (id, text) => {\n    setTodos(todos.map(todo => (todo.id === id ? { ...todo, text } : todo)));\n  };\n\n  const toggleTodo = id => {\n    setTodos(\n      todos.map(\n        todo =>\n          todo.id === id ? { ...todo, completed: !todo.completed } : todo\n      )\n    );\n  };\n\n  const toggleAllTodo = () => {\n    const areAllMarked = todos.every(todo => todo.completed);\n    setTodos(\n      todos.map(todo => ({\n        ...todo,\n        completed: !areAllMarked\n      }))\n    );\n  };\n\n  const clearCompleted = () => {\n    setTodos(todos.filter(todo => todo.completed === false));\n  };\n\n  return [\n    todos,\n    {\n      addTodo,\n      deleteTodo,\n      editTodo,\n      toggleTodo,\n      toggleAllTodo,\n      clearCompleted\n    }\n  ];\n};\n\nexport default function App() {\n  const [\n    todos,\n    { addTodo, deleteTodo, editTodo, toggleTodo, toggleAllTodo, clearCompleted }\n  ] = useTodos(defaultTodos);\n\n  return (\n    <div className=\"todoapp\">\n      <Header addTodo={addTodo} />\n      <MainSection\n        todos={todos}\n        deleteTodo={deleteTodo}\n        editTodo={editTodo}\n        toggleTodo={toggleTodo}\n        toggleAllTodo={toggleAllTodo}\n        clearCompleted={clearCompleted}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'todomvc-app-css/index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}